#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.16
# from Racc grammar file "".
#

require 'racc/parser.rb'
module Rsql
  class Parser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
    16,     8,    16,    21,    16,    36,     6,    19,    20,     5,
    21,    16,    21,    21,    21,    19,    20,    19,    20,    19,
    20,    21,    16,    36,    16,    36,    19,    20,    69,    70,
    74,    54,    21,    57,    21,    19,    20,    19,    20,    19,
    20,    75,    55,    61,    58,    46,    47,    48,    50,    51,
    49,    62,    45,    46,    47,    48,    50,    51,    49,    21,
    45,    46,    47,    48,    50,    51,    49,    64,    45,    46,
    47,    48,    50,    51,    49,    21,    45,    68,    68,     9,
    10,    11,    13,    22,    21,    21,    27,    21,    29,    30,
    31,    32,    33,    21,    21 ]

racc_action_check = [
     8,     0,    52,    32,    27,    27,     0,    68,    68,     0,
     8,    29,    52,    40,    27,     8,     8,    52,    52,    27,
    27,    29,    36,    36,    44,    44,    29,    29,    66,    66,
    71,    38,    36,    42,    44,    75,    75,    36,    36,    44,
    44,    71,    38,    53,    42,    53,    53,    53,    53,    53,
    53,    54,    53,    34,    34,    34,    34,    34,    34,    55,
    34,    35,    35,    35,    35,    35,    35,    57,    35,    59,
    59,    59,    59,    59,    59,    58,    59,    70,    64,     1,
     5,     6,     7,     9,    10,    11,    12,    13,    14,    23,
    24,    25,    26,    30,    31 ]

racc_action_pointer = [
    -1,    79,   nil,   nil,   nil,    69,    73,    79,   -15,    83,
    59,    60,    82,    62,    60,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    73,    61,    75,    65,   -11,   nil,    -4,
    68,    69,   -22,   nil,    34,    42,     7,   nil,    14,   nil,
   -12,   nil,    16,   nil,     9,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   -13,    26,    24,    34,   nil,    58,    50,    50,
   nil,   nil,   nil,   nil,    62,   nil,     1,   nil,   -23,   nil,
    61,    13,   nil,   nil,   nil,     5,   nil ]

racc_action_default = [
   -44,   -44,    -1,    -2,    -3,   -44,   -44,   -44,   -29,   -44,
   -44,   -44,   -44,   -44,   -14,   -30,   -38,   -39,   -40,   -41,
   -42,   -43,    77,   -44,   -17,   -44,   -44,   -44,   -15,   -44,
   -44,   -44,   -32,   -13,   -18,   -44,   -44,   -31,   -44,    -5,
   -44,   -16,   -44,   -33,   -44,   -22,   -23,   -24,   -25,   -26,
   -27,   -28,   -44,   -44,   -44,   -44,    -7,   -44,   -44,   -20,
   -19,   -21,    -4,    -6,    -9,   -34,   -44,   -10,   -35,    -8,
   -44,   -44,   -36,   -11,   -12,   -44,   -37 ]

racc_goto_table = [
    24,    24,    15,    24,    39,    72,    42,    34,    67,    66,
    23,    25,    76,    28,    73,     1,    53,    71,     7,    12,
    40,    41,    43,    37,    59,    26,    14,     4,     3,    63,
    56,    52,    38,     2,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    40,    60,   nil,    65 ]

racc_goto_check = [
     8,     8,    18,     8,     7,    20,     9,    17,    11,    10,
     5,     5,    20,     5,    11,     1,    17,    12,    13,    14,
     8,     8,     8,    18,    17,    15,    16,     4,     3,     7,
     8,    19,     6,     2,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     8,    18,   nil,     8 ]

racc_goto_pointer = [
   nil,    15,    33,    28,    27,     0,     2,   -26,   -10,   -26,
   -55,   -56,   -51,    18,    12,    13,    18,   -20,    -6,    -4,
   -63 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    17,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    35,    44,
    18 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  7, 35, :_reduce_4,
  1, 38, :_reduce_5,
  3, 38, :_reduce_6,
  2, 39, :_reduce_7,
  9, 36, :_reduce_8,
  0, 42, :_reduce_none,
  1, 42, :_reduce_10,
  3, 42, :_reduce_11,
  3, 43, :_reduce_12,
  4, 34, :_reduce_13,
  2, 45, :_reduce_14,
  2, 46, :_reduce_15,
  3, 37, :_reduce_16,
  1, 37, :_reduce_17,
  2, 47, :_reduce_18,
  3, 49, :_reduce_19,
  3, 49, :_reduce_20,
  3, 49, :_reduce_21,
  1, 51, :_reduce_22,
  1, 51, :_reduce_23,
  1, 51, :_reduce_24,
  1, 51, :_reduce_25,
  1, 51, :_reduce_26,
  1, 51, :_reduce_27,
  1, 51, :_reduce_28,
  0, 48, :_reduce_none,
  1, 48, :_reduce_30,
  3, 48, :_reduce_31,
  0, 41, :_reduce_none,
  1, 41, :_reduce_33,
  3, 41, :_reduce_34,
  0, 44, :_reduce_none,
  1, 44, :_reduce_36,
  3, 44, :_reduce_37,
  1, 50, :_reduce_38,
  1, 50, :_reduce_none,
  1, 50, :_reduce_none,
  1, 52, :_reduce_none,
  1, 52, :_reduce_none,
  1, 40, :_reduce_43 ]

racc_reduce_n = 44

racc_shift_n = 77

racc_token_table = {
  false => 0,
  :error => 1,
  :kw_select => 2,
  :kw_from => 3,
  :kw_where => 4,
  :kw_null => 5,
  :kw_not => 6,
  :kw_insert => 7,
  :kw_into => 8,
  :kw_values => 9,
  :kw_create => 10,
  :kw_table => 11,
  :kw_constraint => 12,
  :kw_key => 13,
  :kw_primary => 14,
  :star => 15,
  :lparen => 16,
  :rparen => 17,
  :ws => 18,
  :op_or => 19,
  :op_and => 20,
  :op_lt => 21,
  :op_gt => 22,
  :op_gte => 23,
  :op_lte => 24,
  :identifier => 25,
  :op_equal => 26,
  :semicolon => 27,
  :comma => 28,
  :period => 29,
  :integer => 30,
  :string => 31 }

racc_nt_base = 32

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kw_select",
  "kw_from",
  "kw_where",
  "kw_null",
  "kw_not",
  "kw_insert",
  "kw_into",
  "kw_values",
  "kw_create",
  "kw_table",
  "kw_constraint",
  "kw_key",
  "kw_primary",
  "star",
  "lparen",
  "rparen",
  "ws",
  "op_or",
  "op_and",
  "op_lt",
  "op_gt",
  "op_gte",
  "op_lte",
  "identifier",
  "op_equal",
  "semicolon",
  "comma",
  "period",
  "integer",
  "string",
  "$start",
  "statement",
  "select_query",
  "create_table_query",
  "insert_into_query",
  "relation",
  "column_definitions",
  "column_definition",
  "symbol",
  "symbol_collection",
  "values_collection",
  "values",
  "literal_collection",
  "select_stmt",
  "from_stmt",
  "where_stmt",
  "collection",
  "predicate",
  "atom",
  "binary_operator",
  "literal" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

module_eval(<<'.,.,', 'parser.y', 38)
  def _reduce_4(val, _values, result)
     result = [[:create_table, val[2].merge(columns: val[4]) ]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 40)
  def _reduce_5(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_6(val, _values, result)
     result = val[0] << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 42)
  def _reduce_7(val, _values, result)
     result = [val[0], val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 43)
  def _reduce_8(val, _values, result)
     result = [[:insert_into_query, val[2].merge(column_names: val[4], rows: val[7])]]
    result
  end
.,.,

# reduce 9 omitted

module_eval(<<'.,.,', 'parser.y', 45)
  def _reduce_10(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 46)
  def _reduce_11(val, _values, result)
     result = val[0] + [val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 47)
  def _reduce_12(val, _values, result)
     result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_13(val, _values, result)
     result = [[:select_query, [val[1], val[2], val[0]]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 49)
  def _reduce_14(val, _values, result)
     result = [:select, val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_15(val, _values, result)
     result = [:from, val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 53)
  def _reduce_16(val, _values, result)
     result = { schema_name: val[0], table_name: val[2] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_17(val, _values, result)
     result = { table_name: val[0].to_sym }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 55)
  def _reduce_18(val, _values, result)
     result = [:where, val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 57)
  def _reduce_19(val, _values, result)
     result = [val[1], [ val[0], val[2] ]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 58)
  def _reduce_20(val, _values, result)
     result = [val[1], [ val[0], val[2] ]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 59)
  def _reduce_21(val, _values, result)
     result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 61)
  def _reduce_22(val, _values, result)
     result = :'=='
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 62)
  def _reduce_23(val, _values, result)
     result = :or
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 63)
  def _reduce_24(val, _values, result)
     result = :and
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 64)
  def _reduce_25(val, _values, result)
     result = :<
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_26(val, _values, result)
     result = :<=
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 66)
  def _reduce_27(val, _values, result)
     result = :>
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 67)
  def _reduce_28(val, _values, result)
     result = :>=
    result
  end
.,.,

# reduce 29 omitted

module_eval(<<'.,.,', 'parser.y', 69)
  def _reduce_30(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 70)
  def _reduce_31(val, _values, result)
     result = val[0] << val[2]
    result
  end
.,.,

# reduce 32 omitted

module_eval(<<'.,.,', 'parser.y', 72)
  def _reduce_33(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 73)
  def _reduce_34(val, _values, result)
     result = val[0] << val[2]
    result
  end
.,.,

# reduce 35 omitted

module_eval(<<'.,.,', 'parser.y', 75)
  def _reduce_36(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 76)
  def _reduce_37(val, _values, result)
     result = val[0] << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 78)
  def _reduce_38(val, _values, result)
     result = val[0].to_sym
    result
  end
.,.,

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

module_eval(<<'.,.,', 'parser.y', 84)
  def _reduce_43(val, _values, result)
     result = val[0].downcase.to_sym
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
end   # module Rsql
